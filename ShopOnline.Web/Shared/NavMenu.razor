@implements IDisposable
@inject IShoppingCartService _shoppinCartService

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Shop Online</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="d-block nav-item ">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="fa fa-home" aria-hidden="true"></span> &nbsp;Home
            </NavLink>
        </div>
        <ProductCategoriesNavMenu />
            @*example about the class to hidding the element in the larg or small screens:
        <div class=" d-none d-sm-block d-md-none">This is visible on small screens and hidden on larger screens.</div>
        for  more info visit https://getbootstrap.com/docs/5.3/utilities/display/#hiding-elements*@
        <div class="nav-item d-none d-sm-block d-md-none">
                <NavLink class="nav-link" href="ShoppingCart">
                     <span class="fa fa-solid fa-cart-shopping" aria-hidden="true"></span> &nbsp;Shopping Cart(<b>@shoppingCartItemCount</b>)
                </NavLink>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private int shoppingCartItemCount = 0;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }


    protected override void OnInitialized()
    {
        // this + means subscribe to an event
        _shoppinCartService.OnShoppingCartChanged += ShoppingCartChanged;
    }

    protected void ShoppingCartChanged(int totalQty)
    {
        shoppingCartItemCount = totalQty;
        StateHasChanged();
    }

    void IDisposable.Dispose()
    {
        // this - means unsubscribe to an event
        _shoppinCartService.OnShoppingCartChanged -= ShoppingCartChanged;
    }
}
